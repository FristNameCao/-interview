(function(){"use strict";var t={4754:function(t,a,e){var r=e(6369),i=function(){var t=this,a=t._self._c;return a("div",{staticClass:"content"},[a("div",{staticClass:"box"},[a("i",{class:{"el-icon-s-unfold":t.isCollapse,"el-icon-s-fold":!t.isCollapse},on:{click:function(a){a.stopPropagation(),t.isCollapse=!t.isCollapse}}}),a("i"),a("el-menu",{staticClass:"el-menu-vertical-demo",attrs:{"default-active":"1-4-1",collapse:t.isCollapse,"background-color":"#545c64","text-color":"#fff","active-text-color":"#ffd04b"},on:{open:t.handleOpen,close:t.handleClose}},[a("el-submenu",{attrs:{index:"1"}},[a("template",{slot:"title"},[a("i",{staticClass:"el-icon-location"}),a("span",{attrs:{slot:"title"},slot:"title"},[t._v("计算机基础常识")])]),t._l(t.compted,(function(e){return a("el-menu-item-group",{key:e.href},[a("el-menu-item",{staticStyle:{"text-decoration":"none !important",color:"pink !important","padding-left":"30px"},attrs:{index:"1-1"},on:{click:function(a){return t.add(e.href)}}},[t._v(" "+t._s(e.data))])],1)}))],2),a("el-submenu",{attrs:{index:"2"}},[a("template",{slot:"title"},[a("i",{staticClass:"el-icon-menu"}),a("span",{attrs:{slot:"title"},slot:"title"},[t._v("html+css")])]),t._l(t.cssData,(function(e){return a("el-menu-item-group",{key:e.href},[a("el-menu-item",{staticStyle:{"text-decoration":"none !important",color:"pink !important","padding-left":"30px"},attrs:{index:"1-1"},on:{click:function(a){return t.add(e.href)}}},[t._v(" "+t._s(e.data))])],1)}))],2),a("el-submenu",{attrs:{index:"3"}},[a("template",{slot:"title"},[a("i",{staticClass:"el-icon-document"}),a("span",{attrs:{slot:"title"},slot:"title"},[t._v("javascript")])]),t._l(t.jsData,(function(e){return a("el-menu-item-group",{key:e.href},[a("el-menu-item",{staticStyle:{"text-decoration":"none !important",color:"pink !important","padding-left":"30px"},attrs:{index:"1-1"},on:{click:function(a){return t.add(e.href)}}},[t._v(" "+t._s(e.data))])],1)}))],2),a("el-submenu",{attrs:{index:"4"}},[a("template",{slot:"title"},[a("i",{staticClass:"el-icon-setting"}),a("span",{attrs:{slot:"title"},slot:"title"},[t._v("Vue")])]),t._l(t.vueData,(function(e){return a("el-menu-item-group",{key:e.href},[a("el-menu-item",{staticStyle:{"text-decoration":"none !important",color:"pink !important","padding-left":"30px"},attrs:{index:"1-1"},on:{click:function(a){return t.add(e.href)}}},[t._v(" "+t._s(e.data))])],1)}))],2),a("el-menu-item",{attrs:{index:"4"},on:{click:t.toTop}},[a("i",{staticClass:"el-icon-s-opportunity"}),a("span",{attrs:{slot:"title"},slot:"title"},[t._v("返回顶部")])])],1)],1),a("p",{staticClass:"p"},[t._v("FristNameCao面试题")]),a("el-autocomplete",{staticClass:"inline-input",attrs:{clearable:"","fetch-suggestions":t.querySearch,placeholder:"请输入内容"},on:{select:t.handleSelect},model:{value:t.state1,callback:function(a){t.state1=a},expression:"state1"}}),t._m(0)],1)},o=[function(){var t=this,a=t._self._c;return a("div",{staticClass:"nei"},[a("div",{staticClass:"right"},[a("h1",{attrs:{id:"a1"}},[t._v("opacity和rgba的应用场景？")]),t._v(" opactiy属性的值，可以被子元素继承。regba设置的元素不会继承该属性以及属性值 "),a("h1",{attrs:{id:"a2"}},[t._v("css水平垂直居中的方式？")]),t._v(" 定位居中。line-block实现水平，text-align：center实现垂直 "),a("h1",{attrs:{id:"a3"}},[t._v("如何实现一个三角形？")]),t._v(" padding和margin为0，将border和content的宽高设置为合理的数值时，再将content设置为0。 "),a("h1",{attrs:{id:"a4"}},[t._v("如何实现一个左边固定200px宽度，右边自适应的布局？")]),a("h1",{attrs:{id:"a5"}},[t._v("px,em,rem,vw分别代表什么意思？")]),t._v(" px是一个绝对长度单位，像素px是相对于显示器的屏幕分辨率决定的 em是相对长度单位，相对于对象内文本字体尺寸，这个值并不是固定的，而是相对于父级元素的大小决定 "),a("hr"),a("h1",[t._v("javascript")]),a("br"),a("hr"),a("h1",{attrs:{id:"a6"}},[t._v("JavaScript的数据类型有哪些？")]),t._v(" 基本数据类型：字符串型，数字型，布尔值，null，undefined，symbol 引用数据类型：对象（object），数组（Array），函数（function） "),a("h1",{attrs:{id:"a7"}},[t._v("什么是显示转换隐式转换？")]),t._v(" 显示转换一般指使用 "),a("h1",{attrs:{id:"a8"}},[t._v("什么是JS的DOM事件流？")]),t._v(" 事件流简单来说就是事件执行的顺序流程，DOM树中有大量的元素， 元素之间出现嵌套时，给父子元素同时设置了事件，父子元素的事件执行会按按照顺序执行 包括三个阶段：事件捕获阶段，处于目标阶段，事件冒泡阶段 "),a("h1",{attrs:{id:"a9"}},[t._v("什么是事件委托？优点缺点有哪些？")]),t._v(" 也是事件代理，通过原本子元素的响应事件委托给父元素，让父元素担当事件监听的职务。事件代理的原则就是DOM元素事件冒泡 最大优点是节省内存占用，减少事件注册，比如ul代理所有li的click事件 缺点就是像blur没有冒泡机制的无法委托 "),a("h1",{attrs:{id:"a10"}},[t._v("什么是浅拷贝和深拷贝，如何实现深拷贝浅拷贝？")]),t._v(" 浅拷贝是如同复制，也就是把a的值赋给b的同时把a的址赋给b，当b（a）的值改变的适合，a（b）的值也会变 深拷贝就是拷贝对象的具体内容，二内存地址是自主分配的，拷贝结束之后两个对象虽然存的值是一样的，但是 内存地址不一样，两个对象互相不影响不干涉 "),a("h1",{attrs:{id:"a11"}},[t._v("JS关于数组的常用方法？")]),t._v(" concat() 连接两个或者多个数组，返回一个新的数组"),a("br"),t._v(" join() 数组转换字符串，默认逗号分隔"),a("br"),t._v(" push() unshift() 添加元素操作"),a("br"),t._v(" shift() pop()删除元素操作，改变了原数组"),a("br"),t._v(" sort()数组排序，改变原数组 "),a("br"),t._v(" reverse()反转数组，改变原数组 "),a("br"),t._v(" splice()更新数组，改变原数组 "),a("h1",{attrs:{id:"a12"}},[t._v("什么是闭包？大量使用闭包的缺点？")]),t._v(" 闭包是指有权限访问另外一个函数内作用域中的变量的函数 优点是可以重复使用变量， 在全局变量可以重复使用，但是容易造成变量污染 缺点是容易导致内存泄露，更占用内存，会导网页性能变差 "),a("h1",{attrs:{id:"a13"}},[t._v("es6常用的语法有哪些？")]),t._v(" let,const用来声明变量。let表示变量，const表示常量。let和const都是块级作用域。 模板字符串：基本的字符串格式化。将表达式嵌入字符串中拼接 箭头函数：一部分函数的快捷写法，不需要function关键字创建函数，省略return关键字，继承上下文的this关键字 import和export，import导入模块，export导出模块 promise 同步的方法写异步代码 "),a("h1",{attrs:{id:"a14"}},[t._v("数组去重的方法有哪些？")]),t._v(" 利用es6中 SET去重方法 indexOf去重 双重for循环去重 "),a("h1",{attrs:{id:"a15"}},[t._v("什么是JS的作用域？")]),t._v(" 就是在一定空间可以对数据进行读写操作，这个空间就是数据的作用域，js中常见就是全局和局部作用域。 全局作用域：最外层的函数定义的变量拥有全局作用域，对于任何内部函数来说，都是可以访问的 局部作用域：一般只在固定的代码内可以访问到，而对于函数内外部都是无法访问的，比如函数内部 "),a("h1",{attrs:{id:"a16"}},[t._v("什么是链式编程？")]),t._v(" 就是将多个方法（函数）通过某种方式链接在一起，使多个逻辑块能按照流程逐步进行或者跳过执行 常见有promise 对象方法return this的链式操作 "),a("h1",{attrs:{id:"a17"}},[t._v("如何解决地狱回调的问题？")]),t._v(" 地狱回调就是存在异步代码不能保证按照顺序执行。 promise构造函数接收一个函数作为参数，我们需要处理的异步任务就是卸载该函数体内， 可以替换掉传统的回调函数解决 "),a("h1",{attrs:{id:"a18"}},[t._v("如何获取一个对象所有的属性名?如何修改一个对象属性名?")]),t._v(" Object.getOwnPropertyNames() 返回一个对象本身所有的属性名，不管是否可遍历 "),a("h1",{attrs:{id:"a19"}},[t._v("请大概讲一下JS的执行机制")]),t._v(" 单线程脚本语言，主线程任务--微任务--宏任务 执行顺序= 主线程任务--微任务--宏任务--宏任务里面的微任务--宏任务里面微任务的宏任务--直到任务完成 "),a("hr"),a("h1",[t._v("Vue")]),a("hr"),a("h1",{attrs:{id:"a20"}},[t._v("v-for和v-if哪个先执行？")]),t._v(" v-for高于v-if 在genElement方法中，处理for循环处于if上面的，所以v-for优先级高于v-if "),a("h1",{attrs:{id:"a21"}},[t._v("computed和methods中方法的区别？")]),t._v(" computed定义方法是属性的形式来调用，如{{}} computed带有缓存，methods不是 methods定义的方法，则加上（）调用 "),a("h1",{attrs:{id:"a22"}},[t._v("computed和watch适合分别在什么时候使用？")]),t._v(" computed和watch适合分别在什么时候使用？ computed适用于动态计算data里面的属性值，需要加return， "),a("h1",{attrs:{id:"a23"}},[t._v("vue的生命周期有哪些？")]),t._v(" 创建前（beforeCreate）实例初始化，此时组件的选项对象还未创建，无法访问methods，data，computed等上方法数据无法访问"),a("br"),t._v(" 创建后（created） 挂在阶段还没有开始"),a("br"),t._v(" 加载前（beforeMount）完成模板的翻译，但是还没有挂载到页面上 "),a("br"),t._v(" 加载后（mounted）挂载完成，也渲染到页面上，此时可以进行一些ajax操作 "),a("br"),t._v(" 更新前（beforeUpdate）此时data中数据是最新的，但是页面显示还是旧的，此时还没开始渲染dao "),a("br"),t._v(" 更新后（updated）实例更新完毕之后调用次函数，此时data中的状态值和界面上显示的数据，都完成更新，界面渲染完毕 "),a("br"),t._v(" 销毁前（beforeDestroy）实例在销毁之前，这一步完全可以使用 "),a("br"),t._v(" 销毁后（destroyed）此时全部销毁，实例也会解绑，所有监听一处 "),a("br"),a("h1",{attrs:{id:"a24"}},[t._v("请描述一下keep-alive的使用场景")]),t._v(" vue抽象组件，用来组件进行缓存，从而节省性能能，页面渲染完毕之后不会被渲染成为一个dom元素 "),a("h1",{attrs:{id:"a25"}},[t._v("路由传参的方式有哪些？")]),t._v(" params传参【声明式router-link】：该方式通过router-link组件的to属性实现 【编程式this.$router.push]:同样需要子路由提前配置好参数 params传参，通过路由别名name进行传值 query传参， "),a("h1",{attrs:{id:"a26"}},[t._v("如何实现路由懒加载？")]),t._v(" 延迟夹在，需要的时候进行加载。 "),a("h1",{attrs:{id:"a27"}},[t._v("vue的路由钩子函数有哪些？")]),t._v(" 全局钩子函数：beforeEach，afterRach，beforeResolve 单个路由里面的钩子：beforeEnter 组件路由：beforeRouteEnter，beforeRouteUpdate，beforeRouteLeave "),a("h1",{attrs:{id:"a28"}},[t._v("你有使用过vue的自定义指令吗？举个项目中的示例")]),a("h1",{attrs:{id:"a29"}},[t._v("怎么使用vue的过滤器？过滤器只能在插值表达式中使用吗？")]),a("h1",{attrs:{id:"a30"}},[t._v("v-model的原理是什么？")]),t._v(" v-model主要提供了两个功能， view层输入值影响data的属性值， data属性值发生改变会更新view层的数值变化。 "),a("h1",{attrs:{id:"a31"}},[t._v("vue的数据更新和视图更新是同步还是异步的？")]),a("h1",{attrs:{id:"a32"}},[t._v("为什么更新了数据却不能操作dom？如何解决？")]),a("h1",{attrs:{id:"a33"}},[t._v("简单介绍一下$nextTick")]),a("h1",{attrs:{id:"a34"}},[t._v("v-for后面为什么要加:key？")]),a("h1",{attrs:{id:"a35"}},[t._v("你知道dom diff算法吗？")]),a("h1",{attrs:{id:"a36"}},[t._v("vue中组件通信的方式有哪些？")]),a("h1",{attrs:{id:"a37"}},[t._v(" 什么是插槽？什么是具名插槽？什么是作用域插槽？什么是具名作用域插槽？ ")]),a("h1",{attrs:{id:"a38"}},[t._v(" 如何像elmentui一样封装一个button组件，要求能实现控制背景色，尺寸，文字大小，以及能带有自定义的字体图标？ ")]),a("h1",{attrs:{id:"a39"}},[t._v("router两种导航方式")]),a("h1",{attrs:{id:"a40"}},[t._v("vuex的五种属性")]),t._v(" state：vuex的基本属性，存储变量"),a("br"),t._v(" geeter：从state派生的基本数据，属于state的计算属性 "),a("br"),t._v(" muatation：提交过呢更新数据，必须是同步操作 "),a("br"),t._v(" action：可以包含异步操作 "),a("br"),t._v(" moudules：模块化vuex，方便管理 "),a("br"),a("h1",{attrs:{id:"a41"}},[t._v("什么是ascii码表？")]),a("p",[t._v("美国信息交换标准代码")]),a("p",[t._v(" 每个ASCII码存储在一个Byte中，从0到127的数字代表不同的常用符号，如65代表大写A，97代表小写a。由于ASCII字节的7位中，最高位没有使用，那么最高位也被纳入这个内部代码，成为8位ASCII(ExtendedASCII代码。这种内部代码现在常用于许多特殊符号，如外语和表格。 ")]),a("h1",{attrs:{id:"a43"}},[t._v("计算机为什么使用二进制？")]),t._v(" 计算机俗称电脑，是用电信号的有无或高低或正负来表示数据，这些信号都有无或高低或正负，分别对应数学中的0和1，正是这电信号的这两种状态处理起来比较方便，所以，计算机存储或计算采用二进制 "),a("h1",{attrs:{id:"a44"}}),t._v(" 编码与编号有什么区别？ 编号和编码的主要区别在于编号不涉及用多少字节来表示，是用固定长度还是长度计划来表示。 编号只是一个抽象的概念，是一个数字化字符的过程。 在进一步比较编号和编码之前，先看看编号是怎么来的。 字符集通常是有序的编号集合。 "),a("h1",{attrs:{id:"a45"}},[t._v("Unicode是编码还是编号？")]),t._v(" 字符编码 "),a("h1",{attrs:{id:"a46"}},[t._v(" bmp格式是如何保存图片的？文件内有哪些信息，以什么方式保存的？使用十六进制编辑器进行编辑验证。 ")]),t._v(" 它采用位映射存储格式,BMP文件的数据按照从文件头开始的先后顺序分为四个部分： ◆ 位图文件头(bmp file header)："),a("br"),t._v(" 提供文件的格式、大小等信息 ◆"),a("br"),t._v(" 位图信息头(bitmap information)： 提供图像数据的尺寸、位平面数、压缩方式、颜色索引等信息"),a("br"),t._v(" 位映射使用位映射方式保持"),a("br"),a("h1",{attrs:{id:"a47"}},[t._v(" gif格式是如何保存图片的？为什么图片放大能看到类似麻点的内容？ ")]),t._v(" 打开图片后，点“菜单”——“另存为”，在对话框文件格式里选择gif 格式 就可以。"),a("br"),t._v(" 动图 颜色表 无损压缩(原始图片颜色数量不足256色时) 从1677万种颜色选256种最接近的颜色 会有压缩过程存在 gif图片一般长宽都比较小 只存储变化的点，第一帧是完整的 "),a("h1",{attrs:{id:"a48"}},[t._v("几种图片格式有什么主要的区别？合适的场景分别是？")]),t._v(" 常见的图片格式主要有jpg、png、gif、psd、tif、bmp等格式"),a("br"),t._v(" JPEG格式，也叫做JPG或JPE格式，是最常用的一种文件格式，Photoshop“存储为”命令中默认的图片格式就是JPEG，大部分手机相机拍照的照片也是JPE格式。"),a("br"),t._v(" JPEG格式的压缩技术十分先进，能够将图像压缩在很小的储存空间，不过这种压缩是有损耗的，过度压缩会降低图片的质量。JPEG格式压缩的主要是高频信息，对色彩的信息保留较好，因此特别适合应用于互联网，可减少图像的传输和加载时间。"),a("br"),t._v(" PNG”格式"),a("br"),t._v(" PNG也是常见的一种图片格式，它最重要的特点是支持 alpha 通道透明度，也就是说，PNG图片支持透明背景。比如在使用Photoshop制作透明背景的圆形logo时，如果使用JPG格式，则图片背景会默认地存为白色，使用PNG格式则可以存为透明背景图片。 PNG格式图片也支持有损耗压缩，虽然PNG 提供的压缩量比JPG少，但PNG图片却比JPEG图片有更小的文档尺寸，因此现在越来越多的网络图像开始采用PNG格式。"),a("br"),t._v(" “GIF”格式"),a("br"),t._v(" GIF也是一种压缩的图片格式，分为动态GIF和静态GIF两种。"),a("br"),t._v(" GIF格式的最大特点是支持动态图片，并且支持透明背景。网络上绝大部分动图、表情包都是GIF格式的，相比与动画，GIF动态图片占用的存储空间小，加载速度快，因此非常流行。"),a("br"),t._v(" PSD”格式"),a("br"),t._v(" PSD格式是Photoshop默认的存储格式，适用于存储源文档和工作文件，修改起来比较方便。"),a("br"),t._v(" PSD格式的最大特点是可以保留透明度、图层、路径、通道等PS处理信息，但是需要专业的图形处理软件才能打开。PSD格式的缺点是体积庞大，十分占用存储空间。"),a("br"),t._v(" “TIFF”格式"),a("br"),t._v(" TIFF格式，也叫做或TIF格式，可以支持不同颜色模式、路径、透明度、以及通道，是打印文档中最常用的格式。Photoshop支持在TIFF文件中保存图层以及其他信息，在很多方面类似于PSD格式文件。"),a("br"),t._v(" “BMP”格式"),a("br"),t._v(" BMP 格式是Windows操作系统中的标准图像文件格式，能够被多种Windows应用程序所支持。BMP格式包含的图像信息较丰富，几乎不进行压缩，但由此导致了它占用的存储空间很大，所以，目前BMP在单机上比较流行。"),a("br"),a("a",{attrs:{id:"a49"}},[a("h1",[t._v("什么是数字信号，什么是模拟信号？")])]),t._v(" 模拟信号是指：物理量的变化在时间上和幅度上都是连续的。把表示模拟量的信号称为模拟信号，并把工作在模拟信号下的电路称为模拟电路。声音、温度、速度等都是模拟信号。"),a("br"),t._v(" 数字信号是指：物理量的变化在时间上和数值（幅度）上都是不连续（或称为离散）的。把表示数字量的信号称为数字信号，并把工作在数字信号下的电路称为数字电路。 十字路口的交通信号灯、数字式电子仪表、自动生产线上产品数量的统计等都是数字信号。"),a("br"),a("h1",{attrs:{id:"a49"}},[t._v("将748367转换为5进制。")]),a("a",{attrs:{id:"a50"}},[a("h1",[t._v("什么是当前工作目录？")])]),t._v(" (working folder/directory/tree) current directory；运行pwd命令显示 "),a("a",{attrs:{id:"a51"}},[a("h1",[t._v("什么是路径列表？如何设置？")])]),t._v(" 是一个文件夹列表，可以在系统里设置；"),a("br"),t._v(" 运行 echo $PATH 显示； which command 可以查看到command来自于路径列表中的哪个文件夹 "),a("a",{attrs:{id:"a52"}},[a("h1",[t._v("interface一词有哪些含义？")])]),t._v(" 接口 "),a("a",{attrs:{id:"a53"}},[a("h1",[t._v(".bashrc文件是啥？")])]),t._v(" 用户登录时执行的脚本文件 "),a("a",{attrs:{id:"a54"}},[a("h1",[t._v("如何计算相对路径？")])]),a("a",{attrs:{id:"a55"}},[a("h1",[t._v("vi编辑器的编辑模式与常规模式是什么？如何切换？")])]),t._v(" 按i进入编辑模式,按esc退出编辑模式返回常规模式 "),a("a",{attrs:{id:"a56"}},[a("h1",[t._v("如何用命令删除非空文件夹？")])]),t._v(" rm -r recursive "),a("a",{attrs:{id:"a57"}},[a("h1",[t._v("阅读vim教程vimtutor。")])]),t._v(" 直接在git输入vimtutor "),a("a",{attrs:{id:"a58"}},[a("h1",[t._v("GIt提交GitHub教程第二版")])]),a("a",{attrs:{href:" https://www.liaoxuefeng.com/wiki/896043488029600"}},[t._v("廖雪峰git命令大全")]),a("h1",[t._v(" 首次 git提交代码去GitHub方法"),a("strong",[t._v("注意:(此方法仅限于已经绑定了秘钥的git,没绑定秘钥的后期出教程即可观看)")])]),t._v(" 1. git init 首先初始化代码(每个文件只需要初始化一次就行)"),a("br"),t._v(" 2. git add . 添加所有文件或者使用git add xxx.txt添加单个文件"),a("br"),t._v(' 3. git add commit -m "任意字母为了方便记录提交的是什么"'),a("br"),t._v(" 4. git git remote add origin(可以是任意名称) 绑定的邮箱:FristNameCao/-.git"),a("br"),t._v(" 5. git branch -M main (重命名分支文件也可以是任意的比如aa或者bb)"),a("br"),t._v(" 6. git push -u origin(这个就是步骤4你刚命名的名称) main(这个就是步骤5命名的名称比如刚说的aa或者bb) 后期git提交GitHub方法"),a("br"),t._v(" 1.git add . 添加所有文件或者使用git add xxx.txt添加单个文件"),a("br"),t._v(' 2.git add commit -m "任意字母为了方便记录提交的是什么"'),a("br"),t._v(" 3.git push"),a("br"),a("h1",{attrs:{id:"a59"}},[t._v("GIt提交GitHub教程第一版")]),t._v(" 1.首先生成 ssh-keygen 生成秘钥"),a("br"),t._v(" 2. git add . 添加所有文件或者使用git add xxx.txt添加单个文件"),a("br"),t._v(' 3. git add commit -m "任意字母为了方便记录提交的是什么"'),a("br"),t._v(" 4. git branch -M main(重命名分支文件也可以是任意的比如aa或者bb)"),a("br"),t._v(" 5. git remote add origin(可以是任意名称) 你的邮箱:FristNameCao/-.git"),a("br"),t._v(" 6. git push -u origin main 首次提交使用这个代码 后期git提交GitHub方法"),a("br"),t._v(" 1.git add . 添加所有文件或者使用git add xxx.txt添加单个文件"),a("br"),t._v(' 2.git add commit -m "任意字母为了方便记录提交的是什么"'),a("br"),t._v(" 3.git push"),a("br")])])}];const n=[{href:"#a41",data:"什么是ascii码表？"},{href:"#a42",data:"计算机为什么使用二进制？"},{href:"#a43",data:"编码与编号有什么区别？"},{href:"#a44",data:"Unicode是编码还是编号？"},{href:"#a45",data:"bmp格式是如何保存图片的？文件内有哪些信息，以什么方式保存的？使用十六进制编辑器进行编辑验证。"},{href:"#a46",data:"gif格式是如何保存图片的？为什么图片放大能看到类似麻点的内容？"},{href:"#a47",data:"几种图片格式有什么主要的区别？合适的场景分别是？"},{href:"#a48",data:"什么是数字信号，什么是模拟信号？"},{href:"#a50",data:"什么是当前工作目录？"},{href:"#a51",data:"什么是当前工作目录？"},{href:"#a52",data:"interface一词有哪些含义？"},{href:"#a53",data:".bashrc文件是啥？"},{href:"#a54",data:"vi编辑器的编辑模式与常规模式是什么？如何切换？"},{href:"#a54",data:"如何计算相对路径？"},{href:"#a56",data:"如何用命令删除非空文件夹？"},{href:"#a57",data:"阅读vim教程vimtutor。"},{href:"#a58",data:"GIt提交GitHub教程第二版"},{href:"#a59",data:"GIt提交GitHub教程第一版"}],s=[{href:"#a1",data:"opacity和rgba的应用场景？"},{href:"#a2",data:"css水平垂直居中的方式？"},{href:"#a3",data:"如何实现一个三角形？"},{href:"#a4",data:"如何实现一个左边固定200px宽度，右边自适应的布局？"},{href:"#a5",data:"px,em,rem,vw分别代表什么意思？"}],d=[{href:"#a6",data:"JavaScript的数据类型有哪些？"},{href:"#a7",data:"什么是显示转换隐式转换？"},{href:"#a8",data:"什么是JS的DOM事件流？"},{href:"#a4",data:"如何实现一个左边固定200px宽度，右边自适应的布局？"},{href:"#a9",data:"什么是事件委托？优点缺点有哪些？"},{href:"#a10",data:"什么是浅拷贝和深拷贝，如何实现深拷贝浅拷贝？"},{href:"#a11",data:"JS关于数组的常用方法？"},{href:"#a12",data:"什么是闭包？大量使用闭包的缺点？"},{href:"#a13",data:"es6常用的语法有哪些？"},{href:"#a14",data:"数组去重的方法有哪些？"},{href:"#a15",data:"什么是JS的作用域？"},{href:"#a16",data:"什么是链式编程？"},{href:"#a17",data:"如何解决地狱回调的问题？"},{href:"#a18",data:"如何获取一个对象所有的属性名"}],v=[{href:"#a20",data:"v-for和v-if哪个先执行？"},{href:"#a21",data:"computed和methods中方法的区别？"},{href:"#a22",data:"computed和watch适合分别在什么时候使用？"},{href:"#a23",data:"vue的生命周期有哪些？"},{href:"#a24",data:"请描述一下keep-alive的使用场景"},{href:"#a25",data:"路由传参的方式有哪些？"},{href:"#a26",data:"如何实现路由懒加载？"},{href:"#a27",data:"vue的路由钩子函数有哪些？"},{href:"#a28",data:"你有使用过vue的自定义指令吗？举个项目中的示例"},{href:"#a30",data:"v-model的原理是什么？"},{href:"#a31",data:"vue的数据更新和视图更新是同步还是异步的？"},{href:"#a32",data:"为什么更新了数据却不能操作dom？如何解决？"},{href:"#a33",data:"简单介绍一下$nextTick"},{href:"#a34",data:"v-for后面为什么要加:key？"},{href:"#a35",data:"你知道dom diff算法吗？"},{href:"#a36",data:"vue中组件通信的方式有哪些？"},{href:"#a37",data:"什么是插槽？什么是具名插槽？什么是作用域插槽？什么是具名作用域插槽？"},{href:"#a38",data:"如何像elmentui一样封装一个button组件，要求能实现控制背景色，尺寸，文字大小，以及能带有自定义的字体图标"},{href:"#a39",data:"router两种导航方式"},{href:"#a40",data:"vuex的五种属性"}];var l={data(){return{isCollapse:!0,compted:n,jsData:d,cssData:s,vueData:v,restaurants:[],state1:"",timeout:null}},mounted(){this.restaurants=this.loadAll(),console.log([...this.cssData])},methods:{toTop(){document.documentElement.scrollTop=document.body.scrollTo=0},handleOpen(t,a){console.log(t,a)},handleClose(t,a){console.log(t,a)},add(t){this.isCollapse=!0,location.hash=t},handleSelect(t){console.log(t),location.href=t.href},querySearch(t,a){var e=this.restaurants,r=t?e.filter(this.createFilter(t)):e;a(r)},createFilter(t){return a=>0===a.value.toLowerCase().indexOf(t.toLowerCase())},loadAll(){let t=[];return this.cssData.forEach((a=>{t.push({value:a.data,href:a.href})})),this.jsData.forEach((a=>{t.push({value:a.data,href:a.href})})),this.vueData.forEach((a=>{t.push({value:a.data,href:a.href})})),this.compted.forEach((a=>{t.push({value:a.data,href:a.href})})),t}}},h=l,u=e(1001),c=(0,u.Z)(h,i,o,!1,null,null,null),f=c.exports,_=e(8499),p=e.n(_);r["default"].config.productionTip=!1,r["default"].use(p()),new r["default"]({render:t=>t(f)}).$mount("#app")}},a={};function e(r){var i=a[r];if(void 0!==i)return i.exports;var o=a[r]={exports:{}};return t[r](o,o.exports,e),o.exports}e.m=t,function(){var t=[];e.O=function(a,r,i,o){if(!r){var n=1/0;for(l=0;l<t.length;l++){r=t[l][0],i=t[l][1],o=t[l][2];for(var s=!0,d=0;d<r.length;d++)(!1&o||n>=o)&&Object.keys(e.O).every((function(t){return e.O[t](r[d])}))?r.splice(d--,1):(s=!1,o<n&&(n=o));if(s){t.splice(l--,1);var v=i();void 0!==v&&(a=v)}}return a}o=o||0;for(var l=t.length;l>0&&t[l-1][2]>o;l--)t[l]=t[l-1];t[l]=[r,i,o]}}(),function(){e.n=function(t){var a=t&&t.__esModule?function(){return t["default"]}:function(){return t};return e.d(a,{a:a}),a}}(),function(){e.d=function(t,a){for(var r in a)e.o(a,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:a[r]})}}(),function(){e.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){e.o=function(t,a){return Object.prototype.hasOwnProperty.call(t,a)}}(),function(){e.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}}(),function(){var t={143:0};e.O.j=function(a){return 0===t[a]};var a=function(a,r){var i,o,n=r[0],s=r[1],d=r[2],v=0;if(n.some((function(a){return 0!==t[a]}))){for(i in s)e.o(s,i)&&(e.m[i]=s[i]);if(d)var l=d(e)}for(a&&a(r);v<n.length;v++)o=n[v],e.o(t,o)&&t[o]&&t[o][0](),t[o]=0;return e.O(l)},r=self["webpackChunkintereview"]=self["webpackChunkintereview"]||[];r.forEach(a.bind(null,0)),r.push=a.bind(null,r.push.bind(r))}();var r=e.O(void 0,[998],(function(){return e(4754)}));r=e.O(r)})();
//# sourceMappingURL=app.b604211f.js.map